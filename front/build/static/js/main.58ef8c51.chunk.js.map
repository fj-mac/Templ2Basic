{"version":3,"sources":["buscar.js","App.js","serviceWorker.js","index.js"],"names":["buscar","props","state","Estrato","top","bottom","loading","encontrados","handleSubmit","bind","handleEstratoChange","event","preventDefault","valor","target","value","this","setState","console","log","fetch","then","response","json","count","Object","keys","length","datos","filtrados","seleccionado","pos","fami_estratovivienda","push","ordenados","sort","a","b","punt_global","ordenados2","peores","slice","mejores","catch","error","map","t","fami_personashogar","estu_depto_reside","className","id","type","onChange","onClick","class","losMejores","losPeores","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58ef8c51.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./buscar.css\"\n\nclass buscar extends Component  {\n constructor(props){\n    super(props);\n    this.state = {\n      Estrato: \"\",\n      top: [],\n      bottom: [],\n      loading:false,\n      encontrados: false\n    }\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleEstratoChange = this.handleEstratoChange.bind(this);\n  }\n\n  handleEstratoChange(event) {\n    event.preventDefault();\n    let valor=event.target.value;\n    this.setState({ Estrato: valor }, ()=>{\n      console.log(\"Se ha seleccionado el estrato: \"+ this.state.Estrato)\n    }\n\n    );\n  }\n\n\n\n\n  handleSubmit(event) {\n     event.preventDefault();\n    this.setState({loading:true})\n     fetch(\"https://www.datos.gov.co/resource/tkn6-e4ic.json\")\n      .then(response => response.json())\n      .then(response => {\n          let count = Object.keys(response).length;\n          let datos=response;\n          console.log(datos);\n          console.log (\"son: \"+ count+\" personas iniciales\")\n          let filtrados=[];\n          let seleccionado=\"Estrato \"+this.state.Estrato;\n          for(let pos in datos){\n              datos[pos][\"pos\"] = pos;\n              if(datos[pos].fami_estratovivienda===seleccionado)\n              {\n                filtrados.push(datos[pos]);\n              }\n\n          };\n          console.log(filtrados)\n          console.log (\"son: \"+ filtrados.length+\" personas ahora\")\n          let ordenados=filtrados.sort((a,b) => (a.punt_global > b.punt_global) ? 1 : ((b.punt_global> a.punt_global) ? -1 : 0));\n          console.log(ordenados)\n          let ordenados2=ordenados\n          //punt_global\n          let peores=ordenados.slice(0,10);\n          this.setState({ bottom: peores });\n          console.log(this.state.bottom)\n\n\n          let mejores=ordenados2.slice(ordenados2.length-10,ordenados2.length);\n          mejores=mejores.sort((a,b) => (a.punt_global < b.punt_global) ? 1 : ((b.punt_global< a.punt_global) ? -1 : 0));\n          this.setState({ top: mejores });\n          console.log(this.state.top)\n          this.setState({loading:false})\n          this.setState({encontrados:true})\n      })\n      .catch(error=>console.log(\"No sirve el fetch\", error))\n\n\n  }\n\n  losMejores(){\n    return this.state.top.map(t=>(\n        <tr>\n            <td>{t.fami_personashogar}</td>\n            <td>{t.estu_depto_reside}</td>\n            <td>{t.punt_global}</td>\n          </tr>\n      ));\n  }\n\n   losPeores(){\n    return this.state.bottom.map(t=>(\n\n          <tr>\n            <td>{t.fami_personashogar}</td>\n            <td>{t.estu_depto_reside}</td>\n            <td>{t.punt_global}</td>\n          </tr>\n\n      ));\n  }\n\n\nrender(){\n\n  return (\n    <div>\n      <h1>React funcionando front+back</h1>\n      <div className=\"row\">\n        <div className=\"col-md-10\">\n          <input id=\"input\" type=\"text\" className=\"form-control\"\n           onChange={this.handleEstratoChange}\n\n          />\n        </div>\n        <div className=\"col-md-2\">\n          <button type=\"button\" className=\"btn btn-secondary\"\n          onClick={this.handleSubmit}\n          >Buscar</button>\n        </div>\n      </div>\n      <div className=\"row\">\n      <div className=\"col-md-5\">\n      </div>\n      <div className=\"col-md-2\">\n       {this.state.loading || (this.state.bottom==null)? <div className=\"loader\"></div>:<div></div>}\n      </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n         {this.state.encontrados?\n            <div>\n            <h1>Los Mejores 10</h1>\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th ># de personas en el hogar</th>\n                  <th >Departamento</th>\n                  <th >Puntaje Global</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.losMejores()}\n              </tbody>\n            </table>\n            </div>\n          :<div></div>}\n        </div>\n        <div className=\"col-md-6\">\n          {this.state.encontrados?\n            <div>\n            <h1>Los Peores 10</h1>\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th ># de personas en el hogar</th>\n                  <th >Departamento</th>\n                  <th >Puntaje Global</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.losPeores()}\n              </tbody>\n            </table>\n            </div>\n          :<div></div>}\n        </div>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default buscar;\n","import React, { Component } from \"react\";\nimport Buscar from \"./buscar\";\n\nclass App extends Component  {\n constructor(props){\n    super(props);\n    this.state = {\n      Estrato: \"\",\n      top: [],\n      bottom: [],\n      loading:false\n    }\n  }\n\n\n\n\nrender(){\n  return (\n    <div>\n      <Buscar/>\n\n    </div>\n  )\n}\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div className=\"container\">\n    <App />\n  </div>\n\n  ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}